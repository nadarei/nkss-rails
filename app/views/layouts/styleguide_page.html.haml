-# # Templates: Styleguide page template
-# This formats your styleguides.
-#
-# It puts things into `:body` and `:head`, and calls the `layouts/styleguide`
-# layout, which you should have in your app.
-#
-# Don't like me? Just copy me into your
-# `app/views/layouts/styleguide_page.html.haml` and customize me.

- content_for :body do
  %button.sg-toggle-sidebar

  %aside.sg-toc
    = image_tag "bb_logo_200x200.png", class: "bb_logo"
    %h1
      %strong= styleguide_title
      %small Style guide

    %ul
      - styleguide_sections.each do |id, name|
        %li
          - href = @single_page ? "##{id}" : id
          - klass = @single_page ? "" : (id == @section ? 'active' : '')
          %a{class: klass, href: href}
            %span.sg-number= "#{id}"
            %span.sg-name= name

  %section.sg-body
    = yield

  %script{src: "http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.0/jquery-1.8.0.min.js"}
  %script{src: "http://google-code-prettify.googlecode.com/svn/trunk/src/prettify.js"}
  %link{href: "http://google-code-prettify.googlecode.com/svn/trunk/src/prettify.css", type: "text/css", rel: "stylesheet"}
  :javascript
    // Pretty printer script
    (function() {
      var pretty = false;
      $('.sg-view-code').on('click', function expand() {
        if (!pretty) {
          prettyPrint();
          pretty = true;
        }

        var $block = $(this).closest('.sg-example');
        $block.find('.sg-html').toggleClass('sg-expanded');
        $block.find('.sg-view-code').toggleClass('sg-expanded');
      });
    })();

    // Sidebar toggler script
    (function() {
      $('.sg-toggle-sidebar').on('click', function() {
        $('body').toggleClass('sg-full');
      });
    })();

    (function() {
    });

    // Scrollspy script
    (function() {
      $.fn.scrollagent = function(options, callback) {
        // Account for $.scrollspy(function)
        if (typeof callback === 'undefined') {
          callback = options;
          options = {};
        }

        var $sections = $(this);
        var $parent = options.parent || $(window);

        // Find the top offsets of each section
        var offsets = [];
        $sections.each(function(i) {
          offsets.push({
            top: $(this).offset().top,
            id: $(this).attr('id'),
            index: i,
            el: this
          });
        });

        // State
        var current = null;
        var height = null;
        var range = null;

        // Save the height. Do this only whenever the window is resized so we don't
        // recalculate often.
        $(window).on('resize', function onresize() {
          height = $parent.height();
          range = $(document).height();
        });

        // Find the current active section every scroll tick.
        $parent.on('scroll', function() {
          var y = $parent.scrollTop();
          y += height * (0.3 + 0.7 * Math.pow(y/range, 2));

          var latest = null;

          for (var i in offsets) {
            if (offsets.hasOwnProperty(i)) {
              var offset = offsets[i];
              if (offset.top < y) latest = offset;
            }
          }

          if (latest && (!current || (latest.index !== current.index))) {
            callback.call($sections,
              latest ? latest.id : null,
              current ? current.id : null,
              latest ? latest.el : null,
              current ? current.el : null);
            current = latest;
          }
        });

        $(window).trigger('resize');
        $parent.trigger('scroll');

        return this;
      };

      var $sections = $('.sg-page-title');

      $sections.scrollagent(function(cid, pid) {
        if (pid) {
          $(".sg-toc [href='#"+pid+"']").removeClass('active');
        }
        if (cid) {
          $(".sg-toc [href='#"+cid+"']").addClass('active');
        }
      });

    })();

- content_for :head do
  = stylesheet_link_tag 'styleguide'

= render file: 'layouts/styleguide'
